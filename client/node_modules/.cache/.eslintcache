[{"/home/jazmin/Documentos/REACT/todolist/client/src/index.js":"1","/home/jazmin/Documentos/REACT/todolist/client/src/App.js":"2","/home/jazmin/Documentos/REACT/todolist/client/src/components/Nav.js":"3","/home/jazmin/Documentos/REACT/todolist/client/src/components/Form-card.js":"4","/home/jazmin/Documentos/REACT/todolist/client/src/components/Card.js":"5","/home/jazmin/Documentos/REACT/todolist/client/src/components/Home.js":"6","/home/jazmin/Documentos/REACT/todolist/client/src/components/Error.js":"7","/home/jazmin/Documentos/REACT/todolist/client/src/components/Spinner.js":"8"},{"size":156,"mtime":1618153469237,"results":"9","hashOfConfig":"10"},{"size":3437,"mtime":1618498498107,"results":"11","hashOfConfig":"10"},{"size":689,"mtime":1618498390313,"results":"12","hashOfConfig":"10"},{"size":5613,"mtime":1618404429983,"results":"13","hashOfConfig":"10"},{"size":3225,"mtime":1618418536008,"results":"14","hashOfConfig":"10"},{"size":245,"mtime":1618096379641,"results":"15","hashOfConfig":"10"},{"size":176,"mtime":1618071548063,"results":"16","hashOfConfig":"10"},{"size":278,"mtime":1618064874541,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1kdf0pf",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/home/jazmin/Documentos/REACT/todolist/client/src/index.js",[],["36","37"],"/home/jazmin/Documentos/REACT/todolist/client/src/App.js",[],"/home/jazmin/Documentos/REACT/todolist/client/src/components/Nav.js",["38"],"/home/jazmin/Documentos/REACT/todolist/client/src/components/Form-card.js",[],"/home/jazmin/Documentos/REACT/todolist/client/src/components/Card.js",["39","40","41"],"import React, {useState, useEffect } from 'react';\nimport '../css/card.css';\n\nimport Axios from 'axios';\n\nconst Card = ({mainTitle, upTo}) => {\n\n    const [taskList, saveTaskList] = useState([]);\n    const [color, saveColor] = useState(null);\n    \n    const getAll = e =>{\n        Axios.get(\"http://localhost:3010/api/getAll\").then((response)=>{\n            saveTaskList(response.data);\n    })};\n        \n    const getToDo = e =>{\n        Axios.get(\"http://localhost:3010/api/getToDo\").then((response)=>{\n            saveTaskList(response.data);\n    })};\n\n    const getDoing = e =>{\n        Axios.get(\"http://localhost:3010/api/getDoing\").then((response)=>{\n            saveTaskList(response.data);\n    })};\n\n    const getDone = e =>{\n        Axios.get(\"http://localhost:3010/api/getDone\").then((response)=>{\n            saveTaskList(response.data);\n    })};\n\n    const deleteCard = (id_card) =>{\n        Axios.delete(`http://localhost:3010/api/delete/${id_card}`);\n    };\n\n    const updateTitle = (id_card, title) =>{\n        Axios.put(\"http://localhost:3010/api/updateTitle\", {\n            id_card: id_card,\n            title: title\n        });\n    };\n\n    const updateCard = (id_card, content) =>{\n        Axios.put(`http://localhost:3010/api/updateTitle/${id_card}`);\n    };\n\n\n    useEffect(()=>{\n        if(mainTitle === 'All'){\n            getAll();\n            return;\n        }\n        if(mainTitle === 'To do'){\n            getToDo();\n            return;\n        }\n        if(mainTitle === 'Doing'){\n            getDoing();\n            return;\n        }\n        if(mainTitle === 'Done'){\n            getDone();\n            return;\n        }\n    }, []);\n\n    const main = document.querySelector('#main-title');\n    const colorCard = document.querySelector('#color-card');\n\n\n    if(colorCard){   colorCard.style.backgroundColor = color } \n    if(main){   main.innerHTML = mainTitle } \n\n    const changeState = (up) =>{\n        console.log(up);\n\n    }\n\n\n    return(\n            <>\n            <h2 id=\"por\"></h2>\n                { taskList.map((value)=>{\n                /* {saveColor(value.color)} */\n                if(colorCard){ colorCard.style.backgroundColor = value.color;}\n\n                    return                    <div className=\"body-card\" id=\"color-card\"  >\n                    <h2 className=\"title-card\" >{value.title}  </h2>\n                    <button className=\"btn-card\" onClick={() =>{updateTitle(value.id_card)}}>Update</button>\n                    <hr className=\"border-card\" ></hr>\n                    <div className=\"content-card\" >\n                        <form className=\"form-save\" >\n                            <p>{value.content}</p>\n                            {upTo ? <button className=\"btn-card\" id=\"btn-to-doing\" onClick={changeState(upTo)}>{upTo}</button> : null}\n                            <button className=\"btn-card\" onClick={() =>{deleteCard(value.id_card)}}>Remove</button>\n                            \n                            <button className=\"btn-card\" onClick={() =>{updateCard(value.id_card)}}>Update</button>\n                        </form>\n                    </div>\n                </div>\n                })}\n            </>\n        );\n    }\n    export default Card;\n","/home/jazmin/Documentos/REACT/todolist/client/src/components/Home.js",[],"/home/jazmin/Documentos/REACT/todolist/client/src/components/Error.js",[],"/home/jazmin/Documentos/REACT/todolist/client/src/components/Spinner.js",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":3,"column":8,"nodeType":"48","messageId":"49","endLine":3,"endColumn":13},{"ruleId":"46","severity":1,"message":"50","line":9,"column":19,"nodeType":"48","messageId":"49","endLine":9,"endColumn":28},{"ruleId":"51","severity":1,"message":"52","line":64,"column":8,"nodeType":"53","endLine":64,"endColumn":10,"suggestions":"54"},{"ruleId":"55","severity":1,"message":"56","line":81,"column":13,"nodeType":"57","endLine":81,"endColumn":26},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"no-unused-vars","'Axios' is defined but never used.","Identifier","unusedVar","'saveColor' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'mainTitle'. Either include it or remove the dependency array.","ArrayExpression",["60"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"61","fix":"62"},"Update the dependencies array to be: [mainTitle]",{"range":"63","text":"64"},[1657,1659],"[mainTitle]"]