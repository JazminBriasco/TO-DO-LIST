{"ast":null,"code":"var _jsxFileName = \"/home/jazmin/Documentos/REACT/todolist/client/src/components/Card.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport '../css/card.css';\nimport Axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Card = ({\n  mainTitle,\n  upTo\n}) => {\n  _s();\n\n  /**States */\n\n  /**State that saves the response of the call to the database */\n  const [taskList, saveTaskList] = useState([]);\n  /**This will save and show the color of each card */\n\n  const [color, saveColor] = useState(null);\n  /**Calls */\n\n  const getAll = e => {\n    Axios.get(\"http://localhost:3010/api/getAll\").then(response => {\n      saveTaskList(response.data);\n    });\n  };\n\n  const getToDo = e => {\n    Axios.get(\"http://localhost:3010/api/getToDo\").then(response => {\n      saveTaskList(response.data);\n    });\n  };\n\n  const getDoing = e => {\n    Axios.get(\"http://localhost:3010/api/getDoing\").then(response => {\n      saveTaskList(response.data);\n    });\n  };\n\n  const getDone = e => {\n    Axios.get(\"http://localhost:3010/api/getDone\").then(response => {\n      saveTaskList(response.data);\n    });\n  };\n\n  const deleteCard = id_card => {\n    Axios.delete(`http://localhost:3010/api/delete/${id_card}`);\n  };\n\n  const changeState = (id_card, status) => {\n    Axios.put(\"http://localhost:3010/api/upTo\", {\n      id_card: id_card,\n      state: status\n    });\n  };\n\n  const updateCard = id_card => {\n    Axios.put(\"http://localhost:3010/api/updateContent\", {\n      id_card: id_card,\n      content: document.getElementById('placeholder-input').value\n    });\n    /*         window.location.reload(); */\n  };\n\n  const updateTitle = id_card => {\n    Axios.put(\"http://localhost:3010/api/updateTitle\", {\n      id_card: id_card,\n      title: document.getElementById('placeholder-input-title').value\n    });\n    /*         window.location.reload(); */\n  };\n  /**Use Effect, the first function that is called */\n\n\n  useEffect(() => {\n    if (mainTitle === 'All') {\n      getAll();\n      return;\n    }\n\n    if (mainTitle === 'To do') {\n      getToDo();\n      return;\n    }\n\n    if (mainTitle === 'Doing') {\n      getDoing();\n      return;\n    }\n\n    if (mainTitle === 'Done') {\n      getDone();\n      return;\n    }\n  }, []);\n  /**Constants */\n\n  const main = document.querySelector('#main-title');\n  const colorCard = document.querySelector('#color-card');\n\n  if (colorCard) {\n    colorCard.style.backgroundColor = color;\n  }\n\n  if (main) {\n    main.innerHTML = mainTitle;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      id: \"por\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), taskList.map(value => {\n      if (colorCard) {\n        colorCard.style.backgroundColor = value.color;\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"body-card\",\n        id: \"color-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            required: true,\n            type: \"text\",\n            className: \"title-card\",\n            id: \"placeholder-input-title\",\n            placeholder: value.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-card\",\n            id: \"btn-update\",\n            onClick: e => {\n              updateTitle(value.id_card);\n            },\n            children: \"Change\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: \"border-card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              required: true,\n              type: \"text\",\n              id: \"placeholder-input\",\n              placeholder: value.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-card\",\n              onClick: e => {\n                updateCard(value.id_card);\n              },\n              children: \"Change\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"form-save\",\n            children: [upTo ? /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-card\",\n              id: \"btn-to-doing\",\n              onClick: () => {\n                changeState(value.id_card, upTo);\n              },\n              children: upTo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 37\n            }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-card\",\n              onClick: () => {\n                deleteCard(value.id_card);\n              },\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 43\n      }, this);\n    })]\n  }, void 0, true);\n};\n\n_s(Card, \"PzKgSXnM7WRnWO91hFTBfbwtR5g=\");\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/home/jazmin/Documentos/REACT/todolist/client/src/components/Card.js"],"names":["React","useState","useEffect","Axios","Card","mainTitle","upTo","taskList","saveTaskList","color","saveColor","getAll","e","get","then","response","data","getToDo","getDoing","getDone","deleteCard","id_card","delete","changeState","status","put","state","updateCard","content","document","getElementById","value","updateTitle","title","main","querySelector","colorCard","style","backgroundColor","innerHTML","map"],"mappings":"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","sourcesContent":["import React, {useState, useEffect } from 'react';\nimport '../css/card.css';\nimport Axios from 'axios';\n\nconst Card = ({mainTitle, upTo}) => {\n\n/**States */\n    /**State that saves the response of the call to the database */\n    const [taskList, saveTaskList] = useState([]);\n\n    /**This will save and show the color of each card */\n    const [color, saveColor] = useState(null);\n\n\n/**Calls */\n    const getAll = e =>{\n        Axios.get(\"http://localhost:3010/api/getAll\").then((response)=>{\n            saveTaskList(response.data);\n    })};\n        \n    const getToDo = e =>{\n        Axios.get(\"http://localhost:3010/api/getToDo\").then((response)=>{\n            saveTaskList(response.data);\n    })};\n\n    const getDoing = e =>{\n        Axios.get(\"http://localhost:3010/api/getDoing\").then((response)=>{\n            saveTaskList(response.data);\n    })};\n\n    const getDone = e =>{\n        Axios.get(\"http://localhost:3010/api/getDone\").then((response)=>{\n            saveTaskList(response.data);\n    })};\n\n    const deleteCard = (id_card) =>{\n        Axios.delete(`http://localhost:3010/api/delete/${id_card}`);\n    };\n\n    const changeState = (id_card, status) =>{\n        Axios.put(\"http://localhost:3010/api/upTo\", {\n            id_card: id_card,\n            state: status\n    })};\n\n    const updateCard = ( id_card) =>{\n        Axios.put(\"http://localhost:3010/api/updateContent\", {\n            id_card: id_card,\n            content: document.getElementById('placeholder-input').value\n        }); \n/*         window.location.reload(); */\n    };\n\n    const updateTitle = (id_card) =>{\n        Axios.put(\"http://localhost:3010/api/updateTitle\", {\n            id_card: id_card,\n            title: document.getElementById('placeholder-input-title').value\n        });\n/*         window.location.reload(); */\n    };\n\n\n/**Use Effect, the first function that is called */\n    useEffect(()=>{\n        if(mainTitle === 'All'){\n            getAll();\n            return;\n        }\n        if(mainTitle === 'To do'){\n            getToDo();\n            return;\n        }\n        if(mainTitle === 'Doing'){\n            getDoing();\n            return;\n        }\n        if(mainTitle === 'Done'){\n            getDone();\n            return;\n        }\n    }, []);\n\n\n/**Constants */\n    const main = document.querySelector('#main-title');\n    const colorCard = document.querySelector('#color-card');\n\n\n    if(colorCard){   colorCard.style.backgroundColor = color } \n    if(main){   main.innerHTML = mainTitle } \n\n\n    return(\n            <>\n            <h2 id=\"por\"></h2>\n                { taskList.map((value)=>{\n\n                \n                if(colorCard){ colorCard.style.backgroundColor = value.color;}\n                \n                return                    <div className=\"body-card\" id=\"color-card\"  >\n                    <form>\n                        <input required type=\"text\" className=\"title-card\" id=\"placeholder-input-title\" placeholder = {value.title}>\n                        </input>\n                        <button className=\"btn-card\" id=\"btn-update\" onClick={(e) =>{updateTitle(value.id_card)}}>Change</button>\n                    </form>\n\n                    <hr className=\"border-card\" ></hr>\n                    <div className=\"content-card\" >\n                        <form>\n                            <input required type=\"text\" id=\"placeholder-input\" placeholder = {value.content}>\n                            </input>\n                            <button className=\"btn-card\" onClick={(e) =>{updateCard(value.id_card)}}>Change</button>\n                        </form>\n\n                        <form className=\"form-save\" >\n                            {upTo ? <button className=\"btn-card\" id=\"btn-to-doing\" onClick={() =>{changeState(value.id_card, upTo)}}>{upTo}</button> : null}\n                            <button className=\"btn-card\" onClick={() =>{deleteCard(value.id_card)}}>Remove</button>\n                        </form>\n                    </div>\n                </div>\n                })}\n            </>\n        );\n    }\n    export default Card;\n"]},"metadata":{},"sourceType":"module"}