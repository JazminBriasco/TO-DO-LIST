{"ast":null,"code":"var _jsxFileName = \"/home/jazmin/Documentos/REACT/todolist/client/src/components/Form-card.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Error from './Error';\nimport Spinner from './Spinner';\nimport '../css/card.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst FormCard = () => {\n  _s();\n\n  /**States */\n  //Save the first content (What user is typing) in content variable.\n  const [content, saveContent] = useState(null); //Variable to save, function to call.\n  //Error message\n\n  const [error, generateError] = useState(false); //Save the confirm content (After 'Save' button)\n\n  const [confirm, confirmContent] = useState(null); //Call Spinner\n\n  const [load, loading] = useState(false);\n  /**Handles */\n  //When the data in the form is confirmed\n\n  const sendContent = e => {\n    e.preventDefault(); //Validations\n\n    if (content !== null) {\n      //Spinner active\n      loading(true); //Error not active\n\n      generateError(false); //Simulate loading\n\n      setTimeout(() => {\n        //After Save button, this is de data for the other div\n        confirmContent(content); //Stop loading\n\n        loading(false); //Clean the input\n\n        document.getElementById(\"card-input\").value = '';\n        saveContent(null);\n      }, 1500);\n    } else {\n      console.log('Wrong information');\n      generateError(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body-card\",\n      id: \"card-task-color\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"title-card\",\n        children: 'New task'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"border-card\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-card\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: sendContent,\n          className: \"form-save\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"no-style-input\",\n            id: \"card-input\",\n            type: \"text\",\n            placeholder: \"Write me\",\n            onChange: e => saveContent(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-card\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-card \",\n        children: [confirm ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [confirm, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 34\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"form-save\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-card\",\n            children: \"OK !\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"color\",\n          onChange: e => document.getElementById(\"card-task-color\").style.backgroundColor = e.target.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), error ? /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 29\n      }, this) : null, load ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 28\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(FormCard, \"URPyss4hkZdpVJZ2weuqYBCunAw=\");\n\n_c = FormCard;\nexport default FormCard;\n/* function Card(props ){\n    console.log(props); */\n\n/* React usa JSX, que permite mezclar HTML y JS */\n\n/*     return(\n        <>\n            <div className=\"body-card\">\n                <h2 className=\"title-card\">{props.titulo }</h2>\n                <hr className=\"border-card\"></hr>\n                <div className=\"content-card\">\n                    Aenean vulputate neque ante, ut facilisis elit ultricies a. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Cras mi arcu, mattis sit amet mauris at, eleifend congue velit. Proin bibendum commodo tellus. Quisque faucibus ex nulla, id suscipit metus pharetra at. Donec tincidunt, massa eget euismod imperdiet, urna ex viverra velit, at bibendum odio libero quis diam. Suspendisse suscipit congue congue.\n                </div>\n            </div>\n        </>\n    );\n} */\n\n/* const Card = ({titulo}) => */\n\n/* console.log(titulo); */\n\n/*Código JS */\n\n/*Se puede sacar el return y <></> siempre y cuando no se use JS en esta sección */\n\n/*   (\n    <>\n        <div className=\"body-card\">\n            <h2 className=\"title-card\">{titulo}</h2>\n            <hr className=\"border-card\"></hr>\n            <div className=\"content-card\">\n                Aenean vulputate neque ante, ut facilisis elit ultricies a. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Cras mi arcu, mattis sit amet mauris at, eleifend congue velit. Proin bibendum commodo tellus. Quisque faucibus ex nulla, id suscipit metus pharetra at. Donec tincidunt, massa eget euismod imperdiet, urna ex viverra velit, at bibendum odio libero quis diam. Suspendisse suscipit congue congue.\n            </div>\n        </div>\n    </>\n); */\n\n/*class es una palabra reservada de JS, como usa JSX usa className para HTML. */\n\nvar _c;\n\n$RefreshReg$(_c, \"FormCard\");","map":{"version":3,"sources":["/home/jazmin/Documentos/REACT/todolist/client/src/components/Form-card.js"],"names":["React","useState","Error","Spinner","FormCard","content","saveContent","error","generateError","confirm","confirmContent","load","loading","sendContent","e","preventDefault","setTimeout","document","getElementById","value","console","log","target","style","backgroundColor"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport Error from './Error';\nimport Spinner from './Spinner';\nimport '../css/card.css';\n\n\n    \nconst FormCard = () => {\n    \n/**States */\n    //Save the first content (What user is typing) in content variable.\n    const [content, saveContent] = useState(null);  //Variable to save, function to call.\n\n    //Error message\n    const [error, generateError] = useState(false);\n\n    //Save the confirm content (After 'Save' button)\n    const [confirm, confirmContent] = useState(null);\n\n    //Call Spinner\n    const [load, loading] = useState(false); \n\n\n/**Handles */    \n    //When the data in the form is confirmed\n    const sendContent = e =>{\n        e.preventDefault(); \n\n        //Validations\n        if(content !== null){\n            //Spinner active\n            loading(true);\n            \n            //Error not active\n            generateError(false);\n\n            //Simulate loading\n            setTimeout(() => {\n\n            //After Save button, this is de data for the other div\n            confirmContent(content);\n\n            //Stop loading\n            loading(false);\n\n            //Clean the input\n            document.getElementById(\"card-input\").value = '';\n            saveContent(null);\n            }, 1500);\n\n        }else{\n            console.log('Wrong information');\n            generateError(true);\n        }\n    }\n\n    return(\n        <>\n            <div className=\"body-card\" id=\"card-task-color\">\n                <h2 className=\"title-card\">{'New task'}</h2>\n                <hr className=\"border-card\"></hr>\n                <div className=\"content-card\">\n                    <form onSubmit = {sendContent} className=\"form-save\">\n                        <input className=\"no-style-input\" id=\"card-input\" type=\"text\" placeholder=\"Write me\" onChange={ e => saveContent(e.target.value)}></input>\n                        <button className=\"btn-card\">Save</button>\n                    </form>\n                </div>\n                <div className=\"content-card \">\n                    {(confirm) ? <p>{confirm} </p>: null}\n                    <form className=\"form-save\">\n         {/*                <button className=\"btn-card\">REMOVE</button> */}\n                        <button className=\"btn-card\">OK !</button>\n                    </form>\n<input type=\"color\" onChange={ e => document.getElementById(\"card-task-color\").style.backgroundColor = e.target.value}></input>\n                </div>\n                {/* Conditional components */}\n                { (error) ? <Error/> : null  }  \n                { (load) ? <Spinner/> : null  } \n            </div>\n\n        </>\n    );\n}\nexport default FormCard;\n\n\n\n\n\n\n/* function Card(props ){\n    console.log(props); */\n    /* React usa JSX, que permite mezclar HTML y JS */\n/*     return(\n        <>\n            <div className=\"body-card\">\n                <h2 className=\"title-card\">{props.titulo }</h2>\n                <hr className=\"border-card\"></hr>\n                <div className=\"content-card\">\n                    Aenean vulputate neque ante, ut facilisis elit ultricies a. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Cras mi arcu, mattis sit amet mauris at, eleifend congue velit. Proin bibendum commodo tellus. Quisque faucibus ex nulla, id suscipit metus pharetra at. Donec tincidunt, massa eget euismod imperdiet, urna ex viverra velit, at bibendum odio libero quis diam. Suspendisse suscipit congue congue.\n                </div>\n            </div>\n        </>\n    );\n} */\n\n/* const Card = ({titulo}) => */\n    /* console.log(titulo); */\n    /*Código JS */\n    /*Se puede sacar el return y <></> siempre y cuando no se use JS en esta sección */\n    /*   (\n        <>\n            <div className=\"body-card\">\n                <h2 className=\"title-card\">{titulo}</h2>\n                <hr className=\"border-card\"></hr>\n                <div className=\"content-card\">\n                    Aenean vulputate neque ante, ut facilisis elit ultricies a. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Cras mi arcu, mattis sit amet mauris at, eleifend congue velit. Proin bibendum commodo tellus. Quisque faucibus ex nulla, id suscipit metus pharetra at. Donec tincidunt, massa eget euismod imperdiet, urna ex viverra velit, at bibendum odio libero quis diam. Suspendisse suscipit congue congue.\n                </div>\n            </div>\n        </>\n    ); */\n\n\n\n/*class es una palabra reservada de JS, como usa JSX usa className para HTML. */"]},"metadata":{},"sourceType":"module"}