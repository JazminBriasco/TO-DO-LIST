{"ast":null,"code":"var _jsxFileName = \"/home/jazmin/Documentos/REACT/todolist/client/src/components/Form-card.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Error from './Error';\nimport Spinner from './Spinner';\nimport '../css/card.css';\nimport Axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst FormCard = () => {\n  _s();\n\n  /**States */\n  //Save the title\n  const [title, saveTitle] = useState(null); //Save the content (What user is typing) in content variable.\n\n  const [content, saveContent] = useState(null); //Variable to save, function to call.\n  //Save color (this will be for the color of the cards)\n\n  const [color, saveColor] = useState(null); //Error message\n\n  const [error, generateError] = useState(false); //Call Spinner\n\n  const [load, loading] = useState(false);\n  /**Handles */\n  //When the data in the form is confirmed\n\n  const sendContent = e => {\n    e.preventDefault(); //Validations\n\n    if (content.length !== 0 && (title !== null || undefined)) {\n      console.log(content, title); //Spinner active\n\n      loading(true); //Error not active\n\n      generateError(false); //Simulate loading\n\n      setTimeout(() => {\n        submitTask(); //Stop loading\n\n        loading(false); //Clean the input\n\n        document.getElementById(\"card-input-title\").value = '';\n        document.getElementById(\"card-input-content\").value = '';\n        saveContent(null);\n      }, 1500);\n    } else {\n      console.log('Wrong information');\n      generateError(true);\n    }\n  }; //Called by the above function\n\n\n  const submitTask = () => {\n    Axios.post(\"http://localhost:3010/api/insert\", {\n      content: content,\n      title: title,\n      color: color\n    }).then(() => {\n      alert('Success!');\n    });\n  }; //This will be for the color of the cards.\n\n\n  const changeColor = e => {\n    document.getElementById(\"card-task-color\").style.backgroundColor = e.target.value;\n    saveColor(e.target.value);\n    console.log(color);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body-card\",\n      id: \"card-task-color\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"title-card\",\n        children: 'New task'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"border-card\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-card\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: sendContent,\n          className: \"form-save\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"no-style-input\",\n            id: \"card-input-title\",\n            type: \"text\",\n            placeholder: \"Title\",\n            onChange: e => saveTitle(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"no-style-input\",\n            id: \"card-input-content\",\n            type: \"text\",\n            placeholder: \"Write me!\",\n            onChange: e => saveContent(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-card\",\n            children: \"OK!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"color\",\n        className: \"card-color-picker\",\n        onChange: changeColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), error ? /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 29\n      }, this) : null, load ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 28\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(FormCard, \"uroEgG/MRpt/dUbQT9Wu9WrvdBs=\");\n\n_c = FormCard;\nexport default FormCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormCard\");","map":{"version":3,"sources":["/home/jazmin/Documentos/REACT/todolist/client/src/components/Form-card.js"],"names":["React","useState","Error","Spinner","Axios","FormCard","title","saveTitle","content","saveContent","color","saveColor","error","generateError","load","loading","sendContent","e","preventDefault","length","undefined","console","log","setTimeout","submitTask","document","getElementById","value","post","then","alert","changeColor","style","backgroundColor","target"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport Error from './Error';\nimport Spinner from './Spinner';\nimport '../css/card.css';\nimport Axios from 'axios';\n\n    \nconst FormCard = () => {\n    \n    /**States */\n    //Save the title\n    const [title, saveTitle] = useState(null);  \n\n    //Save the content (What user is typing) in content variable.\n    const [content, saveContent] = useState(null);  //Variable to save, function to call.\n\n    //Save color (this will be for the color of the cards)\n    const [color, saveColor] = useState(null);  \n\n    //Error message\n    const [error, generateError] = useState(false);\n\n    //Call Spinner\n    const [load, loading] = useState(false); \n\n\n/**Handles */    \n    //When the data in the form is confirmed\n    const sendContent = e =>{\n        e.preventDefault(); \n\n        //Validations\n        if((content.length !== 0) && (title !== null || undefined)){\n            console.log(content , title);\n            //Spinner active\n            loading(true);\n            \n            //Error not active\n            generateError(false);\n\n            //Simulate loading\n            setTimeout(() => {\n                submitTask();\n\n                //Stop loading\n                loading(false);\n\n                //Clean the input\n                document.getElementById(\"card-input-title\").value = '';\n                document.getElementById(\"card-input-content\").value = '';\n                \n                saveContent(null);\n            }, 1500);\n        }else{\n            console.log('Wrong information');\n            generateError(true);\n        }\n    }\n\n    //Called by the above function\n    const submitTask = () =>{\n        Axios.post(\"http://localhost:3010/api/insert\", {\n            content: content,\n            title: title, \n            color: color\n        }).then(()=>{\n            alert('Success!');\n        });\n    }\n    \n    //This will be for the color of the cards.\n    const changeColor = e =>{\n        document.getElementById(\"card-task-color\").style.backgroundColor = e.target.value;\n        saveColor(e.target.value);\n        console.log(color);\n    }\n\n    return(\n        <>\n            <div className=\"body-card\" id=\"card-task-color\">\n                <h2 className=\"title-card\">{'New task'}</h2>\n                <hr className=\"border-card\"></hr>\n                <div className=\"content-card\">\n                    <form onSubmit = {sendContent} className=\"form-save\">\n                        <input className=\"no-style-input\" id=\"card-input-title\" type=\"text\" placeholder=\"Title\" onChange={ e => saveTitle(e.target.value)}></input> \n                        <input className=\"no-style-input\" id=\"card-input-content\" type=\"text\" placeholder=\"Write me!\" onChange={ e => saveContent(e.target.value)}></input>              \n                        <button className=\"btn-card\">OK!</button>\n                    </form>\n\n                </div>\n                <input type=\"color\" className=\"card-color-picker\" onChange={changeColor}></input>\n                {/* Conditional components */}\n                { (error) ? <Error/> : null  }  \n                { (load) ? <Spinner/> : null  } \n            </div>\n\n        </>\n    );\n}\nexport default FormCard;\n"]},"metadata":{},"sourceType":"module"}