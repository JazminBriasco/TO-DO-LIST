{"ast":null,"code":"var _jsxFileName = \"/home/jazmin/Documentos/REACT/todolist/client/src/components/Card.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport '../css/card.css';\nimport Axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Card = ({\n  mainTitle,\n  upTo\n}) => {\n  _s();\n\n  const [taskList, saveTaskList] = useState([]);\n  const [color, saveColor] = useState(null);\n\n  const getAll = e => {\n    Axios.get(\"http://localhost:3010/api/getAll\").then(response => {\n      saveTaskList(response.data);\n    });\n  };\n\n  const getToDo = e => {\n    Axios.get(\"http://localhost:3010/api/getToDo\").then(response => {\n      saveTaskList(response.data);\n    });\n  };\n\n  const getDoing = e => {\n    Axios.get(\"http://localhost:3010/api/getDoing\").then(response => {\n      saveTaskList(response.data);\n    });\n  };\n\n  const getDone = e => {\n    Axios.get(\"http://localhost:3010/api/getDone\").then(response => {\n      saveTaskList(response.data);\n    });\n  };\n\n  useEffect(() => {\n    if (mainTitle === 'All') {\n      getAll();\n      return;\n    }\n\n    if (mainTitle === 'To do') {\n      getToDo();\n      return;\n    }\n\n    if (mainTitle === 'Doing') {\n      getDoing();\n      return;\n    }\n\n    if (mainTitle === 'Done') {\n      getDone();\n      return;\n    }\n  }, []);\n  const main = document.querySelector('#main-title');\n  const colorCard = document.querySelector('#color-card');\n\n  if (colorCard) {\n    colorCard.style.backgroundColor = color;\n  }\n\n  if (main) {\n    main.innerHTML = mainTitle;\n  }\n\n  const changeState = up => {\n    console.log(up);\n  };\n\n  const deleteCard = (e, title) => {\n    e.preventDefault();\n    console.log('TITLE: ' + title);\n    window.alert(\"hoÃ±a0\");\n    Axios.delete(`http://localhost:3010/api/delete/${title}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      id: \"por\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), taskList.map(value => {\n      /* {saveColor(value.color)} */\n      if (colorCard) {\n        colorCard.style.backgroundColor = value.color;\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"body-card\",\n        id: \"color-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"title-card\",\n          id: \"intro1\",\n          children: [value.title, \"  \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: \"border-card\",\n          id: \"intro2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content-card\",\n          id: \"intro3\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"form-save\",\n            id: \"intro4\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: value.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this), upTo ? /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-card\",\n              id: \"btn-to-doing\",\n              onClick: changeState(upTo),\n              children: upTo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 37\n            }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-card\",\n              onClick: () => deleteCard(value.title),\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 47\n      }, this);\n    })]\n  }, void 0, true);\n};\n\n_s(Card, \"PzKgSXnM7WRnWO91hFTBfbwtR5g=\");\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/home/jazmin/Documentos/REACT/todolist/client/src/components/Card.js"],"names":["React","useState","useEffect","Axios","Card","mainTitle","upTo","taskList","saveTaskList","color","saveColor","getAll","e","get","then","response","data","getToDo","getDoing","getDone","main","document","querySelector","colorCard","style","backgroundColor","innerHTML","changeState","up","console","log","deleteCard","title","preventDefault","window","alert","delete","map","value","content"],"mappings":"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","sourcesContent":["import React, {useState, useEffect } from 'react';\nimport '../css/card.css';\n\nimport Axios from 'axios';\n\nconst Card = ({mainTitle, upTo}) => {\n\n    const [taskList, saveTaskList] = useState([]);\n    const [color, saveColor] = useState(null);\n    \n    const getAll = e =>{\n        Axios.get(\"http://localhost:3010/api/getAll\").then((response)=>{\n            saveTaskList(response.data);\n    })};\n        \n    const getToDo = e =>{\n        Axios.get(\"http://localhost:3010/api/getToDo\").then((response)=>{\n            saveTaskList(response.data);\n    })};\n\n    const getDoing = e =>{\n        Axios.get(\"http://localhost:3010/api/getDoing\").then((response)=>{\n            saveTaskList(response.data);\n    })};\n\n    const getDone = e =>{\n        Axios.get(\"http://localhost:3010/api/getDone\").then((response)=>{\n            saveTaskList(response.data);\n    })};\n\n\n        \n\n    useEffect(()=>{\n        if(mainTitle === 'All'){\n            getAll();\n            return;\n        }\n        if(mainTitle === 'To do'){\n            getToDo();\n            return;\n        }\n        if(mainTitle === 'Doing'){\n            getDoing();\n            return;\n        }\n        if(mainTitle === 'Done'){\n            getDone();\n            return;\n        }\n    }, []);\n\n    const main = document.querySelector('#main-title');\n    const colorCard = document.querySelector('#color-card');\n\n\n    if(colorCard){   colorCard.style.backgroundColor = color } \n    if(main){   main.innerHTML = mainTitle } \n\n    const changeState = (up) =>{\n        console.log(up);\n\n    }\n\n    const deleteCard = (e, title) =>{\n        e.preventDefault();\n        console.log('TITLE: ' + title);\n        window.alert(\"hoÃ±a0\");\n\n        Axios.delete(`http://localhost:3010/api/delete/${title}`);\n    };\n\n\n    return(\n            <>\n            <h2 id=\"por\"></h2>\n                { taskList.map((value)=>{\n                /* {saveColor(value.color)} */\n                if(colorCard){ colorCard.style.backgroundColor = value.color;}\n\n                    return                    <div className=\"body-card\" id=\"color-card\"  >\n                    <h2 className=\"title-card\" id=\"intro1\">{value.title}  </h2>\n                    <hr className=\"border-card\" id=\"intro2\"></hr>\n                    <div className=\"content-card\" id=\"intro3\">\n                        <form className=\"form-save\" id=\"intro4\">\n                            <p>{value.content}</p>\n                            {upTo ? <button className=\"btn-card\" id=\"btn-to-doing\" onClick={changeState(upTo)}>{upTo}</button> : null}\n                            <button className=\"btn-card\" onClick={() => deleteCard(value.title)}>Remove</button>\n                        </form>\n                    </div>\n                </div>\n                })}\n            </>\n        );\n    }\n    export default Card;\n"]},"metadata":{},"sourceType":"module"}