{"ast":null,"code":"var _jsxFileName = \"/home/jazmin/Documentos/REACT/todolist/client/src/components/Form-card.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Error from './Error';\nimport Spinner from './Spinner';\nimport '../css/card.css';\nimport Axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst FormCard = () => {\n  _s();\n\n  /**States */\n  //Save the title\n  const [title, saveTitle] = useState(null); //Save the first content (What user is typing) in content variable.\n\n  const [content, saveContent] = useState(null); //Variable to save, function to call.\n  //Save color\n\n  const [color, saveColor] = useState(null); //Error message\n\n  const [error, generateError] = useState(false); //Save the confirm content (After 'Save' button)\n\n  /*     const [confirm, confirmContent] = useState(null); */\n  //Call Spinner\n\n  const [load, loading] = useState(true);\n  /**Handles */\n  //When the data in the form is confirmed\n\n  /*     const sendContent = e =>{\n          e.preventDefault(); \n  \n          //Validations\n          if(content !== null){\n              //Spinner active\n              loading(true);\n              \n              //Error not active\n              generateError(false);\n  \n              //Simulate loading\n              setTimeout(() => {\n  \n              //After Save button, this is de data for the other div\n              confirmContent(content);\n  \n              //Stop loading\n              loading(false);\n  \n              //Clean the input\n              document.getElementById(\"card-input-title\").value = '';\n              document.getElementById(\"card-input-content\").value = '';\n              \n              \n              saveContent(null);\n              }, 1500);\n  \n          }else{\n              console.log('Wrong information');\n              generateError(true);\n          }\n      } */\n\n  const submitTask = () => {\n    //Validations\n    if (content !== null && title !== null) {\n      //Error not active\n\n      /* generateError(false); */\n      //Simulate loading\n      loading(true);\n      /*     setTimeout(() => {\n               loading(false); */\n      //Clean the input\n\n      /*                 document.getElementById(\"card-input-title\").value = '';\n                      document.getElementById(\"card-input-content\").value = '';\n                  \n                      saveContent(null);\n                  }, 5000);\n      \n              }else{\n                  console.log('Wrong information');\n                  generateError(true); */\n    }\n\n    console.log('title client: ' + title);\n    console.log('content client: ' + content);\n    console.log('Color client: ' + color);\n    Axios.post(\"http://localhost:3010/api/insert\", {\n      content: content,\n      title: title,\n      color: color\n    }).then(() => {\n      alert('Success!');\n    });\n  };\n\n  const changeColor = e => {\n    document.getElementById(\"card-task-color\").style.backgroundColor = e.target.value;\n    saveColor(e.target.value);\n    console.log(color);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body-card\",\n      id: \"card-task-color\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"title-card\",\n        children: 'New task'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"border-card\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-card\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: submitTask,\n          className: \"form-save\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"no-style-input\",\n            id: \"card-input-title\",\n            type: \"text\",\n            placeholder: \"Title\",\n            onChange: e => saveTitle(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"no-style-input\",\n            id: \"card-input-content\",\n            type: \"text\",\n            placeholder: \"Write me\",\n            onChange: e => saveContent(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-card\",\n            children: \"OK!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), \"                \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"color\",\n        className: \"card-color-picker\",\n        onChange: changeColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }, this), error ? /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 29\n      }, this) : null, load ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 28\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(FormCard, \"hpV1h8trZSClaBGBA1uGnfhn9Mw=\");\n\n_c = FormCard;\nexport default FormCard;\n/* function Card(props ){\n    console.log(props); */\n\n/* React usa JSX, que permite mezclar HTML y JS */\n\n/*     return(\n        <>\n            <div className=\"body-card\">\n                <h2 className=\"title-card\">{props.titulo }</h2>\n                <hr className=\"border-card\"></hr>\n                <div className=\"content-card\">\n                    Aenean vulputate neque ante, ut facilisis elit ultricies a. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Cras mi arcu, mattis sit amet mauris at, eleifend congue velit. Proin bibendum commodo tellus. Quisque faucibus ex nulla, id suscipit metus pharetra at. Donec tincidunt, massa eget euismod imperdiet, urna ex viverra velit, at bibendum odio libero quis diam. Suspendisse suscipit congue congue.\n                </div>\n            </div>\n        </>\n    );\n} */\n\n/* const Card = ({titulo}) => */\n\n/* console.log(titulo); */\n\n/*Código JS */\n\n/*Se puede sacar el return y <></> siempre y cuando no se use JS en esta sección */\n\n/*   (\n    <>\n        <div className=\"body-card\">\n            <h2 className=\"title-card\">{titulo}</h2>\n            <hr className=\"border-card\"></hr>\n            <div className=\"content-card\">\n                Aenean vulputate neque ante, ut facilisis elit ultricies a. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Cras mi arcu, mattis sit amet mauris at, eleifend congue velit. Proin bibendum commodo tellus. Quisque faucibus ex nulla, id suscipit metus pharetra at. Donec tincidunt, massa eget euismod imperdiet, urna ex viverra velit, at bibendum odio libero quis diam. Suspendisse suscipit congue congue.\n            </div>\n        </div>\n    </>\n); */\n\n/*class es una palabra reservada de JS, como usa JSX usa className para HTML. */\n\nvar _c;\n\n$RefreshReg$(_c, \"FormCard\");","map":{"version":3,"sources":["/home/jazmin/Documentos/REACT/todolist/client/src/components/Form-card.js"],"names":["React","useState","Error","Spinner","Axios","FormCard","title","saveTitle","content","saveContent","color","saveColor","error","generateError","load","loading","submitTask","console","log","post","then","alert","changeColor","e","document","getElementById","style","backgroundColor","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport Error from './Error';\nimport Spinner from './Spinner';\nimport '../css/card.css';\nimport Axios from 'axios';\n\n    \nconst FormCard = () => {\n    \n/**States */\n    //Save the title\n    const [title, saveTitle] = useState(null);  \n\n    //Save the first content (What user is typing) in content variable.\n    const [content, saveContent] = useState(null);  //Variable to save, function to call.\n\n    //Save color\n    const [color, saveColor] = useState(null);  \n\n    //Error message\n    const [error, generateError] = useState(false);\n\n    //Save the confirm content (After 'Save' button)\n/*     const [confirm, confirmContent] = useState(null); */\n\n    //Call Spinner\n    const [load, loading] = useState(true); \n\n\n/**Handles */    \n    //When the data in the form is confirmed\n/*     const sendContent = e =>{\n        e.preventDefault(); \n\n        //Validations\n        if(content !== null){\n            //Spinner active\n            loading(true);\n            \n            //Error not active\n            generateError(false);\n\n            //Simulate loading\n            setTimeout(() => {\n\n            //After Save button, this is de data for the other div\n            confirmContent(content);\n\n            //Stop loading\n            loading(false);\n\n            //Clean the input\n            document.getElementById(\"card-input-title\").value = '';\n            document.getElementById(\"card-input-content\").value = '';\n            \n            \n            saveContent(null);\n            }, 1500);\n\n        }else{\n            console.log('Wrong information');\n            generateError(true);\n        }\n    } */\n\n    const submitTask = () =>{\n\n        //Validations\n        if(content !== null && title !== null){\n            //Error not active\n            /* generateError(false); */\n            \n            //Simulate loading\n            loading(true);\n            \n        /*     setTimeout(() => {\n\n                loading(false); */\n\n                //Clean the input\n/*                 document.getElementById(\"card-input-title\").value = '';\n                document.getElementById(\"card-input-content\").value = '';\n            \n                saveContent(null);\n            }, 5000);\n\n        }else{\n            console.log('Wrong information');\n            generateError(true); */\n        }\n\n\n\n\n        console.log('title client: ' + title);\n        console.log('content client: ' + content);\n        console.log('Color client: ' + color);\n        Axios.post(\"http://localhost:3010/api/insert\", {\n            content: content,\n            title: title, \n            color: color\n        }).then(()=>{\n            alert('Success!');\n        });\n    }\n    \n    const changeColor = e =>{\n        document.getElementById(\"card-task-color\").style.backgroundColor = e.target.value;\n        saveColor(e.target.value);\n        console.log(color);\n    }\n\n    return(\n        <>\n            <div className=\"body-card\" id=\"card-task-color\">\n                <h2 className=\"title-card\">{'New task'}</h2>\n                <hr className=\"border-card\"></hr>\n                <div className=\"content-card\">\n                    <form onSubmit = {submitTask} className=\"form-save\">\n                        <input className=\"no-style-input\" id=\"card-input-title\" type=\"text\" placeholder=\"Title\" onChange={ e => saveTitle(e.target.value)}></input> \n                        <input className=\"no-style-input\" id=\"card-input-content\" type=\"text\" placeholder=\"Write me\" onChange={ e => saveContent(e.target.value)}></input>              \n                        <button className=\"btn-card\">OK!</button>\n                    </form>\n\n                </div>\n         {/*        <div className=\"content-card \">\n                    {(confirm) ? <p>{confirm} </p>: null}\n                    {(title) ? <p>{title} </p>: null}\n                    <form className=\"form-save\">\n                        <button onClick={submitTask} className=\"btn-card\">OK !</button>\n                    </form>\n                </div>\n */}                <input type=\"color\" className=\"card-color-picker\" onChange={changeColor}></input>\n                {/* Conditional components */}\n                { (error) ? <Error/> : null  }  \n                { (load) ? <Spinner/> : null  } \n            </div>\n\n        </>\n    );\n}\nexport default FormCard;\n\n\n\n\n\n\n/* function Card(props ){\n    console.log(props); */\n    /* React usa JSX, que permite mezclar HTML y JS */\n/*     return(\n        <>\n            <div className=\"body-card\">\n                <h2 className=\"title-card\">{props.titulo }</h2>\n                <hr className=\"border-card\"></hr>\n                <div className=\"content-card\">\n                    Aenean vulputate neque ante, ut facilisis elit ultricies a. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Cras mi arcu, mattis sit amet mauris at, eleifend congue velit. Proin bibendum commodo tellus. Quisque faucibus ex nulla, id suscipit metus pharetra at. Donec tincidunt, massa eget euismod imperdiet, urna ex viverra velit, at bibendum odio libero quis diam. Suspendisse suscipit congue congue.\n                </div>\n            </div>\n        </>\n    );\n} */\n\n/* const Card = ({titulo}) => */\n    /* console.log(titulo); */\n    /*Código JS */\n    /*Se puede sacar el return y <></> siempre y cuando no se use JS en esta sección */\n    /*   (\n        <>\n            <div className=\"body-card\">\n                <h2 className=\"title-card\">{titulo}</h2>\n                <hr className=\"border-card\"></hr>\n                <div className=\"content-card\">\n                    Aenean vulputate neque ante, ut facilisis elit ultricies a. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Cras mi arcu, mattis sit amet mauris at, eleifend congue velit. Proin bibendum commodo tellus. Quisque faucibus ex nulla, id suscipit metus pharetra at. Donec tincidunt, massa eget euismod imperdiet, urna ex viverra velit, at bibendum odio libero quis diam. Suspendisse suscipit congue congue.\n                </div>\n            </div>\n        </>\n    ); */\n\n\n\n/*class es una palabra reservada de JS, como usa JSX usa className para HTML. */"]},"metadata":{},"sourceType":"module"}